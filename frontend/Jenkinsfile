pipeline {
    agent any

    triggers {
        githubPush()
    }

    environment {
        DOCKER_HOST = 'unix:///var/run/docker.sock'
        FRONTEND_DIR = "${WORKSPACE}/frontend"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/dev-novan']],
                    extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'frontend']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/dipt4aaaa/Dishcovery_Capstone.git',
                    ]]
                ])
            }
        }

        stage('Validate HTML (Direct Docker)') {
            agent {
                docker {
                    image 'validator/validator:latest'
                    args '-v ${FRONTEND_DIR}:/files'
                }
            }
            steps {
                sh 'validator /files/index.html'
            }
        }

        stage('Validate HTML (Inline Docker)') {
            steps {
                dir('frontend') {
                    sh 'docker run --rm -v $(pwd):/files validator/validator:latest ./index.html'
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir('frontend') {
                    sh 'docker-compose build frontend'
                }
            }
        }

        stage('Deploy Frontend') {
            steps {
                dir('frontend') {
                    sh 'docker-compose up -d --no-deps frontend'
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            slackSend(color: 'good', message: "Frontend deployed successfully: ${env.BUILD_URL}")
        }
        failure {
            slackSend(color: 'danger', message: "Frontend deployment failed: ${env.BUILD_URL}")
        }
    }
}